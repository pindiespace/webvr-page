(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){function Emitter(){this.callbacks={}}Emitter.prototype.emit=function(eventName){var callbacks=this.callbacks[eventName];if(!callbacks){return}var args=[].slice.call(arguments);args.shift();for(var i=0;i<callbacks.length;i++){callbacks[i].apply(this,args)}};Emitter.prototype.on=function(eventName,callback){if(eventName in this.callbacks){this.callbacks[eventName].push(callback)}else{this.callbacks[eventName]=[callback]}};module.exports=Emitter},{}],2:[function(require,module,exports){var WebVRPageManager=require("./webvr-page-manager.js");window.WebVRPageConfig=window.WebVRPageConfig||{};window.WebVRPageManager=WebVRPageManager},{"./webvr-page-manager.js":3}],3:[function(require,module,exports){var Emitter=require("./emitter.js");function WebVRPageManager(renderer,effect,params){this.params=params||{};this.listenResize_()}WebVRPageManager.prototype.resize_=function(camera){};WebVRPageManager.prototype.listenResize_=function(camera){};WebVRPageManager.prototype.render=function(scene,camera,timestamp){};module.exports=WebVRPageManager},{"./emitter.js":1}]},{},[2]);